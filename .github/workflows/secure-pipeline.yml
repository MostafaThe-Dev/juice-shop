name: Secure CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  bandit-sast:
    name: Run Bandit (SAST)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit
        run: bandit -r . -f json -o bandit-report.json

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.json

 dependency-check-sca:

    name: Run OWASP Dependency-Check (SCA)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download Dependency-Check
        run: |
          curl -L https://github.com/jeremylong/DependencyCheck/releases/download/v9.0.7/dependency-check-9.0.7-release.zip -o dc.zip
          unzip dc.zip -d dependency-check
          chmod +x dependency-check/bin/dependency-check.sh

      - name: Run Dependency-Check
        run: |
          ./dependency-check/bin/dependency-check.sh \
            --project "Juice Shop" \
            --scan . \
            --format "JSON" \
            --out dependency-check-report

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report/dependency-check-report.json

  trivy-container-scan:
    name: Run Trivy (Container Image Scanning)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t juice-shop:latest .

      - name: Run Trivy to scan the image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: juice-shop:latest
          format: json
          output: trivy-report.json

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

  zap-dast-scan:

    name: Run OWASP ZAP (DAST)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build Docker image
        run: docker build -t juice-shop:latest .

      - name: Run Juice Shop container with HTTPS
        run: |
          docker run -d \
            -e HTTPS=true \
            -e SSLKEY=ssl/server.key \
            -e SSLCERT=ssl/server.cert \
            -p 3000:3000 \
            juice-shop:latest
          sleep 30  # Wait for the server to fully start

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'https://localhost:3000'
          format: 'json'
          output: 'zap-report.json'
          # Disable SSL verification if self-signed certs (add if needed):
          cmd_options: '-config api.disablekey=true -config connection.dnsTtl=0 -config connection.dnsCacheEntries=0 -config connection.proxyChain.skip=true -config connection.sslAcceptAll=true'

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-report.json

